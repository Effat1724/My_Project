#include <iostream>
#include "utf8.h" // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ú‡ßá‡¶ï‡ßç‡¶ü‡ßá ‡¶è‡¶á header ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶π‡¶¨‡ßá
using namespace std;

int main() {
    const char* str = "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ";

    // 1. Count UTF-8 characters
    cout << "UTF-8 length: " << utf8len(str) << endl;

    // 2. Count bytes needed
    cout << "UTF-8 bytes: " << utf8size(str) << endl;

    // 3. Copy string
    char dest[100];
    utf8cpy(dest, str);
    cout << "Copied string: " << dest << endl;

    // 4. Concatenate
    const char* s1 = "‡¶Ü‡¶Æ‡¶ø ";
    const char* s2 = "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ";
    char result[100] = "";
    utf8cpy(result, s1);
    utf8cat(result, s2);
    cout << "Concatenated: " << result << endl;

    // 5. Compare strings
    cout << "Comparison: " << utf8cmp("‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ", "‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ") << endl;

    // 6. Case-insensitive compare
    cout << "Case compare: " << utf8ncasecmp("HELLO", "hello", 5) << endl;

    // 7. Search character
    cout << "First ‡¶≤: " << utf8chr("‡¶ï‡¶≤‡¶Æ ‡¶≤‡¶æ‡¶≤", '‡¶≤') << endl;

    // 8. Last occurrence
    cout << "Last ‡¶≤: " << utf8rchr("‡¶ï‡¶≤‡¶Æ ‡¶≤‡¶æ‡¶≤", '‡¶≤') << endl;

    // 9. Mixed string count
    cout << utf8len("hello ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ üòÄ") << endl;

    // 10. Emoji length
    cout << utf8len("üòÄüòÄüòÄ") << endl;

    return 0;
}

